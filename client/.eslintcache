[{"/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/index.js":"1","/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/App.js":"2","/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/login/index.js":"3","/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/home/index.jsx":"4","/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/index.js":"5","/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/register/index.jsx":"6","/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/config.js":"7","/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/Blockchain.js":"8","/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/TodoList.js":"9"},{"size":244,"mtime":1612421148155,"results":"10","hashOfConfig":"11"},{"size":1324,"mtime":1613112896952,"results":"12","hashOfConfig":"11"},{"size":2127,"mtime":1613113585650,"results":"13","hashOfConfig":"11"},{"size":4171,"mtime":1613289145330,"results":"14","hashOfConfig":"11"},{"size":1441,"mtime":1613292981295,"results":"15","hashOfConfig":"11"},{"size":5195,"mtime":1613112675515,"results":"16","hashOfConfig":"11"},{"size":2293,"mtime":1613291824730,"results":"17","hashOfConfig":"11"},{"size":2745,"mtime":1613293656860,"results":"18","hashOfConfig":"11"},{"size":1116,"mtime":1613293625920,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"l8djqk",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/index.js",[],["42","43"],"/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/App.js",["44"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Nav, Container, Row } from \"react-bootstrap\";\nimport Login from \"./components/pages/login\";\nimport Home from \"./components/pages/home\";\nimport Account from \"./components/pages/account\";\nimport Register from \"./components/pages/register\";\nimport \"./style.css\";\n\nexport default function BasicExample() {\n  return (\n    <div className=\"add-background\">\n      <Router>\n        <Container fluid className=\"pl-5\">\n          <Row\n            className=\"justify-content-between pt-3\"\n            style={{ width: \"300px\" }}\n          >\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/account\">Account</Link>\n            <Link to=\"/login\">Login</Link>\n            <Link to=\"/register\">Register</Link>\n          </Row>\n        </Container>\n        <hr />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/account\">\n            <Account />{\" \"}\n          </Route>\n          <Route path=\"/contract/:id/:token\">{/* <Contract /> */}</Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n","/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/login/index.js",[],"/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/home/index.jsx",["45","46","47","48"],"import React, { useEffect, useState } from \"react\";\nimport { ListGroup, Carousel, Card, Button, Row } from \"react-bootstrap\";\n\nexport default function Home() {\n  let [news, setNews] = useState([]);\n  useEffect(() => {\n    let from = new Date().toISOString().split(\"T\")[0];\n    let to = new Date().toISOString().split(\"T\")[0];\n    let q = \"ethereum\";\n    let apiKey = \"bd1b1115c38a49108c822a9fb636a598\";\n    fetch(\n      `https://newsapi.org/v2/everything?q=${q}&from=${from}&to=${to}&sortBy=publishedAt&apiKey=${apiKey}&language=en`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.status == \"ok\") {\n          setNews(data.articles);\n        }\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <>\n      Articles:\n      <Carousel>\n        <Carousel.Item interval={2000}>\n          <Card style={{ width: \"50vw\", margin: \"50px auto\" }}>\n            <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n            <Card.Body>\n              <Card.Title>\"What is a Smart Contract?\"</Card.Title>\n              <Card.Text>\n                A Smart Contract is an agreement between parties that is stored\n                on and executed by a blockchain. Smart contracts may have the\n                most potential to change the way companies and organizations do\n                business.\n              </Card.Text>\n              <Button variant=\"primary\">Go somewhere</Button>\n            </Card.Body>\n          </Card>\n        </Carousel.Item>\n        <Carousel.Item interval={2000}>\n          <Card style={{ width: \"50vw\", margin: \"50px auto\" }}>\n            <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n            <Card.Body>\n              <Card.Title>How does it work?</Card.Title>\n              <Card.Text>\n                MdeYoung Notary allows you to simply and easily store the\n                contents of your contract on the Ethereum Blockchain.\n              </Card.Text>\n              <Button variant=\"primary\">Go somewhere</Button>\n            </Card.Body>\n          </Card>\n        </Carousel.Item>\n        <Carousel.Item interval={2000}>\n          <Card style={{ width: \"50vw\", margin: \"50px auto\" }}>\n            <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n            <Card.Body>\n              <Card.Title>Sign up now!</Card.Title>\n              <Card.Text>Simply blah blah blah</Card.Text>\n              <Button variant=\"primary\">Go somewhere</Button>\n            </Card.Body>\n          </Card>\n        </Carousel.Item>\n      </Carousel>\n      Latest News:\n      <Carousel>\n        {news\n          .reduce(\n            (acc, item, index, arr) => {\n              if (acc.view.length < 3) {\n                acc.view.push(item);\n              } else {\n                acc.res.push(acc.view);\n                acc.view = [];\n              }\n              if (index == arr.length - 1) {\n                acc.res.push([item]);\n              }\n              return acc;\n            },\n            { view: [], res: [] }\n          )\n          .res.map((view, key) => (\n            <Carousel.Item interval={2000} key={key}>\n              <Row>\n                {view.map((item, key) => (\n                  <Card\n                    key={key}\n                    style={{ width: \"25vw\", margin: \"50px auto\" }}\n                  >\n                    <Card.Img\n                      variant=\"top\"\n                      style={{\n                        width: \"100%\",\n                        height: \"300px\",\n                        objectFit: \"cover\",\n                      }}\n                      src={item.urlToImage}\n                    />\n                    <Card.Body>\n                      <Card.Title>{item.title}</Card.Title>\n                      <i>{new Date(item.publishedAt).toLocaleString()}</i>\n                      <Card.Text>{item.description}</Card.Text>\n                      <a href={item.url} target=\"_blank\">\n                        <Button variant=\"primary\">read more</Button>\n                      </a>\n                    </Card.Body>\n                  </Card>\n                ))}\n              </Row>\n            </Carousel.Item>\n          ))}\n      </Carousel>\n    </>\n  );\n}\n","/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/index.js",["49","50","51"],"/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/register/index.jsx",["52","53"],"import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\nimport qs from \"qs\";\n// import moment from \"moment\";\nimport { withCookies } from \"react-cookie\";\nimport { withRouter } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n// import \"./style.css\";\n\nfunction Register(props) {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMsg, setErrormsg] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"firstname\", firstName);\n    console.log(\"lastname\", lastName);\n    console.log(\"email\", email);\n    console.log(\"password\", password);\n  }, [firstName, lastName, email, password]);\n\n  const registerUser = () => {\n    //check stuff\n    if (\n      firstName === \"\" ||\n      lastName === \"\" ||\n      email === \"\" ||\n      password === \"\"\n    ) {\n      //show error message\n      setErrormsg(\"All fields required\");\n    } else {\n      setErrormsg(\"\");\n      //   const baseUrl = \"http://localhost:5000\";\n      //   const axiosInstance = axios.create({\n      //     baseURL: baseUrl,\n      //     timeout: 5000, // 5000ms = 5s\n      //   });\n      fetch(\"http://localhost:4000/user/sign_up\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          login: email,\n          password,\n          first_name: firstName,\n          last_name: lastName,\n        }),\n      })\n        .then((json) => {\n          console.log(json);\n          if (json.status == 200) {\n            return json.json();\n          } else {\n            throw new Error(json.code);\n          }\n        })\n        .then((response) => {\n          console.log(response);\n          if (!response) {\n            return setErrormsg(\"Error occurred in form, please check values\");\n          }\n          props.cookies.set(\"token\", response.token, {\n            path: \"/\",\n            maxAge: 30 * 60,\n          });\n\n          props.history.push(\"/account\");\n        })\n        .catch((err) => {\n          console.log(err);\n          setErrormsg(\"Error occurred in form, please check values\");\n        });\n    }\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col lg=\"6\" md=\"8\" xs=\"10\">\n          <img\n            className=\"mb-4\"\n            src=\"/../tokofolio_logo1.svg\"\n            alt=\"200\"\n            width=\"200\"\n            height=\"300\"\n          />\n          <h1 className=\"h3 mb-3 font-weight-normal\">Please Register</h1>\n          <h3 className=\"text-danger\">{errorMsg} </h3>\n          <div className=\"form-group\">\n            <label htmlFor=\"first_name\" className=\"sr-only\">\n              First Name\n            </label>\n\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"First Name\"\n              required=\"\"\n              autoFocus=\"\"\n              name=\"first_name\"\n              value={firstName}\n              onChange={(e) => {\n                setFirstName(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"last_name\" className=\"sr-only\">\n              Last Name\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Last Name\"\n              required=\"\"\n              autoFocus=\"\"\n              name=\"last_name\"\n              value={lastName}\n              onChange={(e) => {\n                setLastName(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"inputEmail\" className=\"sr-only\">\n              Email\n            </label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Email address\"\n              required=\"\"\n              autoFocus=\"\"\n              id=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            ></input>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\" className=\"sr-only\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Password\"\n              required=\"\"\n              id=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            ></input>\n            <div className=\"checkbox mb-3\">\n              <label>\n                <input type=\"checkbox\" value=\"remember-me\" /> Remember me\n              </label>\n            </div>\n          </div>\n          <button\n            className=\"btn btn-lg btn-primary btn-block\"\n            onClick={registerUser}\n          >\n            Submit\n          </button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default withRouter(withCookies(Register));\n","/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/config.js",[],"/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/Blockchain.js",["54","55","56"],"/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/TodoList.js",["57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":13},{"ruleId":"62","severity":1,"message":"66","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":19},{"ruleId":"67","severity":1,"message":"68","line":16,"column":25,"nodeType":"69","messageId":"70","endLine":16,"endColumn":27},{"ruleId":"67","severity":1,"message":"68","line":76,"column":25,"nodeType":"69","messageId":"70","endLine":76,"endColumn":27},{"ruleId":"71","severity":1,"message":"72","line":104,"column":23,"nodeType":"73","endLine":104,"endColumn":58},{"ruleId":"62","severity":1,"message":"74","line":7,"column":21,"nodeType":"64","messageId":"65","endLine":7,"endColumn":33},{"ruleId":"62","severity":1,"message":"75","line":10,"column":9,"nodeType":"64","messageId":"65","endLine":10,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":14,"column":6,"nodeType":"78","endLine":14,"endColumn":8,"suggestions":"79"},{"ruleId":"62","severity":1,"message":"80","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":10},{"ruleId":"67","severity":1,"message":"68","line":55,"column":27,"nodeType":"69","messageId":"70","endLine":55,"endColumn":29},{"ruleId":"62","severity":1,"message":"81","line":12,"column":10,"nodeType":"64","messageId":"65","endLine":12,"endColumn":19},{"ruleId":"71","severity":1,"message":"72","line":50,"column":13,"nodeType":"73","endLine":54,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":60,"column":19,"nodeType":"73","endLine":60,"endColumn":52},{"ruleId":"84","severity":1,"message":"85","line":26,"column":45,"nodeType":"86","endLine":26,"endColumn":65},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'ListGroup' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'setContracts' is assigned a value but never used.","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookies'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'qs' is defined but never used.","'taskCount' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [cookies]",{"range":"92","text":"93"},[516,518],"[cookies]"]