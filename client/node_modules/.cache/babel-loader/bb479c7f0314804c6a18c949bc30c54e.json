{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/DropZone.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Popover, InputGroup, FormControl, OverlayTrigger, Button } from \"react-bootstrap\";\nimport img from \"./image.svg\";\nexport const FilePreview = ({\n  name,\n  data,\n  id,\n  children\n}) => /*#__PURE__*/_jsxDEV(InputGroup, {\n  size: \"sm\",\n  className: \"my-1\",\n  children: [children, /*#__PURE__*/_jsxDEV(FormControl, {\n    value: name,\n    disabled: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n    children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n      trigger: \"click\",\n      placement: \"right\",\n      overlay: /*#__PURE__*/_jsxDEV(Popover, {\n        children: /*#__PURE__*/_jsxDEV(Popover.Content, {\n          children: /*#__PURE__*/_jsxDEV(\"embed\", {\n            src: data,\n            width: \"250\",\n            height: \"700\",\n            style: {\n              zIndex: \"-1\",\n              position: \"relative\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mt-0\",\n        variant: \"secondary\",\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n_c = FilePreview;\nexport default class DropZone extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hightlight: false\n    };\n    this.fileInputRef = /*#__PURE__*/React.createRef();\n    this.openFileDialog = this.openFileDialog.bind(this);\n    this.onFilesAdded = this.onFilesAdded.bind(this);\n    this.onDragOver = this.onDragOver.bind(this);\n    this.onDragLeave = this.onDragLeave.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  openFileDialog() {\n    this.fileInputRef.current.click();\n  }\n\n  onFilesAdded(evt) {\n    const files = evt.target.files;\n    const array = this.fileListToArray(files);\n    this.uploadFile(array);\n  }\n\n  onDragOver(evt) {\n    evt.preventDefault();\n    this.setState({\n      hightlight: true\n    });\n  }\n\n  onDragLeave() {\n    this.setState({\n      hightlight: false\n    });\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n    const files = event.dataTransfer.files;\n    const array = this.fileListToArray(files);\n    this.uploadFile(array);\n    this.setState({\n      hightlight: false\n    });\n  }\n\n  fileListToArray(list) {\n    const array = [];\n\n    for (var i = 0; i < list.length; i++) {\n      array.push(list.item(i));\n    }\n\n    return array;\n  }\n\n  uploadFile(array) {\n    // if (this.props.number) {\n    var formData = new FormData();\n    array.forEach((file, index) => {\n      formData.append(`file`, file);\n    }); // formData.append(\"number\", this.props.number);\n    // formData.append(\"company\", this.props.company);\n    // formData.append(\"manager\", this.props.userName);\n\n    fetch(`http://localhost:4000/contract?token=${this.props.token}`, {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(success => {\n      console.log(success);\n      var files = []; // fetch(\"/php/show/show_files.php?filenumber=\" + this.props.number)\n      //   .then((response) => response.json())\n      //   .then((data) => {\n      //     files = data.map((item) => (\n      //       <FilePreview\n      //         id={item[\"id\"]}\n      //         name={item[\"name\"]}\n      //         data={item[\"data\"]}\n      //       />\n      //     ));\n      //     this.props.onDrop(files);\n      //   });\n    }).catch(error => console.log(error)); // } else {\n    //   alert(\"please input number of document first\");\n    // }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `my-1 text-center Dropzone ${this.state.hightlight ? \"Highlight\" : \"\"}`,\n      onDragOver: this.onDragOver,\n      onDragLeave: this.onDragLeave,\n      onDrop: this.onDrop,\n      onClick: this.openFileDialog,\n      style: {\n        cursor: this.props.disabled ? \"default\" : \"pointer\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: this.fileInputRef,\n        className: \"FileInput\",\n        type: \"file\",\n        name: \"file\",\n        onChange: this.onFilesAdded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"upload\",\n        className: \"Icon\",\n        src: img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Drag files here ok click to select folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FilePreview\");","map":{"version":3,"sources":["/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/DropZone.js"],"names":["React","useEffect","useState","Popover","InputGroup","FormControl","OverlayTrigger","Button","FilePreview","name","data","id","children","zIndex","position","DropZone","Component","constructor","props","state","hightlight","fileInputRef","createRef","openFileDialog","bind","onFilesAdded","onDragOver","onDragLeave","onDrop","current","click","evt","files","target","array","fileListToArray","uploadFile","preventDefault","setState","event","dataTransfer","list","i","length","push","item","formData","FormData","forEach","file","index","append","fetch","token","method","body","then","response","json","success","console","log","catch","error","render","cursor","disabled","img"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Popover,\n  InputGroup,\n  FormControl,\n  OverlayTrigger,\n  Button,\n} from \"react-bootstrap\";\nimport img from \"./image.svg\";\n\nexport const FilePreview = ({ name, data, id, children }) => (\n  <InputGroup size=\"sm\" className=\"my-1\">\n    {children}\n    <FormControl value={name} disabled />\n    <InputGroup.Append>\n      <OverlayTrigger\n        trigger=\"click\"\n        placement=\"right\"\n        overlay={\n          <Popover>\n            <Popover.Content>\n              <embed\n                src={data}\n                width=\"250\"\n                height=\"700\"\n                style={{ zIndex: \"-1\", position: \"relative\" }}\n              />\n            </Popover.Content>\n          </Popover>\n        }\n      >\n        <Button className=\"mt-0\" variant=\"secondary\">\n          Preview\n        </Button>\n      </OverlayTrigger>\n    </InputGroup.Append>\n  </InputGroup>\n);\n\nexport default class DropZone extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hightlight: false,\n    };\n    this.fileInputRef = React.createRef();\n    this.openFileDialog = this.openFileDialog.bind(this);\n    this.onFilesAdded = this.onFilesAdded.bind(this);\n    this.onDragOver = this.onDragOver.bind(this);\n    this.onDragLeave = this.onDragLeave.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  openFileDialog() {\n    this.fileInputRef.current.click();\n  }\n  onFilesAdded(evt) {\n    const files = evt.target.files;\n    const array = this.fileListToArray(files);\n    this.uploadFile(array);\n  }\n  onDragOver(evt) {\n    evt.preventDefault();\n    this.setState({ hightlight: true });\n  }\n  onDragLeave() {\n    this.setState({ hightlight: false });\n  }\n  onDrop(event) {\n    event.preventDefault();\n    const files = event.dataTransfer.files;\n    const array = this.fileListToArray(files);\n    this.uploadFile(array);\n    this.setState({ hightlight: false });\n  }\n  fileListToArray(list) {\n    const array = [];\n    for (var i = 0; i < list.length; i++) {\n      array.push(list.item(i));\n    }\n    return array;\n  }\n  uploadFile(array) {\n    // if (this.props.number) {\n    var formData = new FormData();\n    array.forEach((file, index) => {\n      formData.append(`file`, file);\n    });\n    // formData.append(\"number\", this.props.number);\n    // formData.append(\"company\", this.props.company);\n    // formData.append(\"manager\", this.props.userName);\n\n    fetch(`http://localhost:4000/contract?token=${this.props.token}`, {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((success) => {\n        console.log(success);\n        var files = [];\n        // fetch(\"/php/show/show_files.php?filenumber=\" + this.props.number)\n        //   .then((response) => response.json())\n        //   .then((data) => {\n        //     files = data.map((item) => (\n        //       <FilePreview\n        //         id={item[\"id\"]}\n        //         name={item[\"name\"]}\n        //         data={item[\"data\"]}\n        //       />\n        //     ));\n        //     this.props.onDrop(files);\n        //   });\n      })\n      .catch((error) => console.log(error));\n    // } else {\n    //   alert(\"please input number of document first\");\n    // }\n  }\n\n  render() {\n    return (\n      <div\n        className={`my-1 text-center Dropzone ${\n          this.state.hightlight ? \"Highlight\" : \"\"\n        }`}\n        onDragOver={this.onDragOver}\n        onDragLeave={this.onDragLeave}\n        onDrop={this.onDrop}\n        onClick={this.openFileDialog}\n        style={{ cursor: this.props.disabled ? \"default\" : \"pointer\" }}\n      >\n        <input\n          ref={this.fileInputRef}\n          className=\"FileInput\"\n          type=\"file\"\n          name=\"file\"\n          onChange={this.onFilesAdded}\n        />\n        <img alt=\"upload\" className=\"Icon\" src={img} />\n        <span>Drag files here ok click to select folder</span>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}