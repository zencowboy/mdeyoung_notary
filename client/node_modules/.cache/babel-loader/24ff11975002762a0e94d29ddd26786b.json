{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport { Card, Button, Row, Container } from \"react-bootstrap\";\nimport Web3 from \"web3\";\nimport { TODO_LIST_ABI, TODO_LIST_ADDRESS } from \"./config\";\n\nfunction Account({\n  cookies\n}) {\n  _s();\n\n  const [state, setState] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [contracts, setContracts] = useState([\"Mortgage\", \"Wedding contract\"]);\n  const [todoList, setTodoList] = useState([]);\n  const [taskCount, setTaskCount] = useState(0);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    let token = cookies.get(\"token\"); // fetch(`http://localhost:4000/contract?token=${token}`)\n    //   .then((res) => res.json())\n    //   .then((data) => setState(data));\n\n    loadBlockchainData();\n  }, []);\n\n  async function loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n    const accounts = await web3.eth.getAccounts();\n    setAccount(accounts[0]);\n    const newtodoList = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n    setTodoList(newtodoList);\n    const newtaskCount = await newtodoList.methods.taskCount().call();\n    setTaskCount(newtaskCount);\n    let newTasks = [];\n\n    for (var i = 1; i <= newtaskCount; i++) {\n      const task = await newtodoList.methods.tasks(i).call();\n      newTasks.push(task);\n    }\n\n    setTasks(newTasks);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [\"Your Contracts: \", account, /*#__PURE__*/_jsxDEV(Row, {\n      children: contracts.map(contract => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"text-center m-2 w-25\",\n        style: {\n          minWidth: \"300px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: contract\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Contract between You and the Bank of Ukraine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"With supporting text below as a natural lead-in to additional content.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-around\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: \"Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          className: \"text-muted\",\n          children: \"2 days ago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: tasks.map((task, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskTemplate\",\n        className: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"content\",\n            children: task.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Account, \"/KaCUPSMLTKUIMVAqUqoNj9xXQ4=\");\n\n_c = Account;\nexport default _c2 = withCookies(Account);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Account\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/index.js"],"names":["React","useEffect","useState","withCookies","Card","Button","Row","Container","Web3","TODO_LIST_ABI","TODO_LIST_ADDRESS","Account","cookies","state","setState","account","setAccount","contracts","setContracts","todoList","setTodoList","taskCount","setTaskCount","tasks","setTasks","token","get","loadBlockchainData","web3","givenProvider","accounts","eth","getAccounts","newtodoList","Contract","newtaskCount","methods","call","newTasks","i","task","push","map","contract","minWidth","key","content"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport { Card, Button, Row, Container } from \"react-bootstrap\";\nimport Web3 from \"web3\";\nimport { TODO_LIST_ABI, TODO_LIST_ADDRESS } from \"./config\";\n\nfunction Account({ cookies }) {\n  const [state, setState] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [contracts, setContracts] = useState([\"Mortgage\", \"Wedding contract\"]);\n  const [todoList, setTodoList] = useState([]);\n  const [taskCount, setTaskCount] = useState(0);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    let token = cookies.get(\"token\");\n    // fetch(`http://localhost:4000/contract?token=${token}`)\n    //   .then((res) => res.json())\n    //   .then((data) => setState(data));\n    loadBlockchainData();\n  }, []);\n\n  async function loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n    const accounts = await web3.eth.getAccounts();\n    setAccount(accounts[0]);\n    const newtodoList = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n    setTodoList(newtodoList);\n    const newtaskCount = await newtodoList.methods.taskCount().call();\n    setTaskCount(newtaskCount);\n    let newTasks = [];\n    for (var i = 1; i <= newtaskCount; i++) {\n      const task = await newtodoList.methods.tasks(i).call();\n      newTasks.push(task);\n    }\n    setTasks(newTasks);\n  }\n\n  return (\n    <Container>\n      Your Contracts: {account}\n      <Row>\n        {contracts.map((contract) => (\n          <Card className=\"text-center m-2 w-25\" style={{ minWidth: \"300px\" }}>\n            <Card.Header>{contract}</Card.Header>\n            <Card.Body>\n              <Card.Title>\n                Contract between You and the Bank of Ukraine\n              </Card.Title>\n              <Card.Text>\n                With supporting text below as a natural lead-in to additional\n                content.\n              </Card.Text>\n              <Row className=\"justify-content-around\">\n                <Button variant=\"primary\">Review</Button>\n                <Button variant=\"danger\">Remove</Button>\n              </Row>\n            </Card.Body>\n            <Card.Footer className=\"text-muted\">2 days ago</Card.Footer>\n          </Card>\n        ))}\n      </Row>\n      <Row>\n        {tasks.map((task, key) => (\n          <div className=\"taskTemplate\" className=\"checkbox\" key={key}>\n            <label>\n              <input type=\"checkbox\" />\n              <span className=\"content\">{task.content}</span>\n            </label>\n          </div>\n        ))}\n      </Row>\n    </Container>\n  );\n}\n\nexport default withCookies(Account);\n"]},"metadata":{},"sourceType":"module"}