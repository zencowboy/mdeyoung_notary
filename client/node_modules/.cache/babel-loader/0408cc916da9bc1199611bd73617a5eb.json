{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/Blockchain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport { TODO_LIST_ABI, TODO_LIST_ADDRESS } from \"./config\";\nimport { Row } from \"react-bootstrap\";\nimport TodoList from \"./TodoList\";\nimport \"./blockchain.css\";\nexport default function Blockchain() {\n  _s();\n\n  const [account, setAccount] = useState(\"\");\n  const [todoList, setTodoList] = useState([]);\n  const [taskCount, setTaskCount] = useState(0);\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n\n  async function loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n    const accounts = await web3.eth.getAccounts();\n    setAccount(accounts[0]);\n    const newtodoList = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n    setTodoList(newtodoList);\n    const newtaskCount = await newtodoList.methods.taskCount().call();\n    setTaskCount(newtaskCount);\n    let newTasks = [];\n\n    for (var i = 1; i <= newtaskCount; i++) {\n      const task = await newtodoList.methods.tasks(i).call();\n      newTasks.push(task);\n    }\n\n    setTasks(newTasks);\n  }\n\n  function createTask(content) {\n    setLoading(true);\n    todoList.methods.createTask(content).send({\n      from: account\n    }).once(\"receipt\", receipt => {\n      loadBlockchainData();\n      setLoading(false);\n    });\n  }\n\n  function deleteTask(taskId) {\n    setLoading(true);\n    todoList.methods.delete(taskId).send({\n      account\n    }).once(\"receipt\", receipt => {\n      loadBlockchainData();\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Your Contracts: \", account, /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"navbar-nav px-3\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"nav-link\",\n                  href: \"#\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"account\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"main\", {\n              role: \"main\",\n              className: \"col-lg-12 d-flex justify-content-center\",\n              children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"loader\",\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-center\",\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(TodoList, {\n                tasks: tasks,\n                createTask: createTask,\n                deleteTask: deleteTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Blockchain, \"jyrp55uctUSy6bPB6Jyjllsn1nA=\");\n\n_c = Blockchain;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blockchain\");","map":{"version":3,"sources":["/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/Blockchain.js"],"names":["React","useEffect","useState","Web3","TODO_LIST_ABI","TODO_LIST_ADDRESS","Row","TodoList","Blockchain","account","setAccount","todoList","setTodoList","taskCount","setTaskCount","tasks","setTasks","loading","setLoading","loadBlockchainData","web3","givenProvider","accounts","eth","getAccounts","newtodoList","Contract","newtaskCount","methods","call","newTasks","i","task","push","createTask","content","send","from","once","receipt","deleteTask","taskId","delete"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport { TODO_LIST_ABI, TODO_LIST_ADDRESS } from \"./config\";\nimport { Row } from \"react-bootstrap\";\nimport TodoList from \"./TodoList\";\nimport \"./blockchain.css\";\n\nexport default function Blockchain() {\n  const [account, setAccount] = useState(\"\");\n\n  const [todoList, setTodoList] = useState([]);\n  const [taskCount, setTaskCount] = useState(0);\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n\n  async function loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n    const accounts = await web3.eth.getAccounts();\n    setAccount(accounts[0]);\n    const newtodoList = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n    setTodoList(newtodoList);\n    const newtaskCount = await newtodoList.methods.taskCount().call();\n    setTaskCount(newtaskCount);\n    let newTasks = [];\n    for (var i = 1; i <= newtaskCount; i++) {\n      const task = await newtodoList.methods.tasks(i).call();\n      newTasks.push(task);\n    }\n    setTasks(newTasks);\n  }\n  function createTask(content) {\n    setLoading(true);\n    todoList.methods\n      .createTask(content)\n      .send({ from: account })\n      .once(\"receipt\", (receipt) => {\n        loadBlockchainData();\n        setLoading(false);\n      });\n  }\n\n  function deleteTask(taskId) {\n    setLoading(true);\n    todoList.methods\n      .delete(taskId)\n      .send({ account })\n      .once(\"receipt\", (receipt) => {\n        loadBlockchainData();\n        setLoading(false);\n      });\n  }\n\n  return (\n    <>\n      Your Contracts: {account}\n      <Row>\n        <div>\n          <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n            <ul className=\"navbar-nav px-3\">\n              <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n                <small>\n                  <a className=\"nav-link\" href=\"#\">\n                    <span id=\"account\"></span>\n                  </a>\n                </small>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <main\n                role=\"main\"\n                className=\"col-lg-12 d-flex justify-content-center\"\n              >\n                {loading ? (\n                  <div id=\"loader\" className=\"text-center\">\n                    <p className=\"text-center\">Loading...</p>\n                  </div>\n                ) : (\n                  <TodoList\n                    tasks={tasks}\n                    createTask={createTask}\n                    deleteTask={deleteTask}\n                  />\n                )}\n              </main>\n            </div>\n          </div>\n        </div>\n      </Row>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}