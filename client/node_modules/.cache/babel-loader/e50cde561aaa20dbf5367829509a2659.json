{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/TodoList.js\";\nimport React, { Component } from \"react\";\n\nclass TodoList extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => {\n          event.preventDefault();\n          this.props.createTask(this.task.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"newTask\",\n          ref: input => this.task = input,\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Add task...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"taskList\",\n        className: \"list-unstyled\",\n        children: this.props.tasks.map((task, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"taskTemplate\",\n            className: \"checkbox\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: task.id,\n                defaultChecked: task.completed,\n                onChange: () => this.props.toggleCompleted(this.checkbox.name),\n                ref: input => {\n                  this.checkbox = input;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"content\",\n                onClick: () => this.props.deleteTask(task.id),\n                children: task.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"completedTaskList\",\n        className: \"list-unstyled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/mitchelldeyoung/GIT-REPOS/eth-todo-list/client/src/components/pages/account/TodoList.js"],"names":["React","Component","TodoList","render","event","preventDefault","props","createTask","task","value","input","tasks","map","key","id","completed","toggleCompleted","checkbox","name","deleteTask","content"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC/BE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,8BACE;AACE,QAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBA,UAAAA,KAAK,CAACC,cAAN;AACA,eAAKC,KAAL,CAAWC,UAAX,CAAsB,KAAKC,IAAL,CAAUC,KAAhC;AACD,SAJH;AAAA,gCAME;AACE,UAAA,EAAE,EAAC,SADL;AAEE,UAAA,GAAG,EAAGC,KAAD,IAAY,KAAKF,IAAL,GAAYE,KAF/B;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,SAAS,EAAC,cAJZ;AAKE,UAAA,WAAW,EAAC,aALd;AAME,UAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,gBANF,eAcE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,MAAM,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE;AAAI,QAAA,EAAE,EAAC,UAAP;AAAkB,QAAA,SAAS,EAAC,eAA5B;AAAA,kBACG,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,GAAjB,CAAqB,CAACJ,IAAD,EAAOK,GAAP,KAAe;AACnC,8BACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAA8B,YAAA,SAAS,EAAC,UAAxC;AAAA,mCACE;AAAA,sCACE;AACE,gBAAA,IAAI,EAAC,UADP;AAEE,gBAAA,IAAI,EAAEL,IAAI,CAACM,EAFb;AAGE,gBAAA,cAAc,EAAEN,IAAI,CAACO,SAHvB;AAIE,gBAAA,QAAQ,EAAE,MACR,KAAKT,KAAL,CAAWU,eAAX,CAA2B,KAAKC,QAAL,CAAcC,IAAzC,CALJ;AAOE,gBAAA,GAAG,EAAGR,KAAD,IAAW;AACd,uBAAKO,QAAL,GAAgBP,KAAhB;AACD;AATH;AAAA;AAAA;AAAA;AAAA,sBADF,eAYE;AACE,gBAAA,SAAS,EAAC,SADZ;AAEE,gBAAA,OAAO,EAAE,MAAM,KAAKJ,KAAL,CAAWa,UAAX,CAAsBX,IAAI,CAACM,EAA3B,CAFjB;AAAA,0BAIGN,IAAI,CAACY;AAJR;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,aAAwDP,GAAxD;AAAA;AAAA;AAAA;AAAA,kBADF;AAuBD,SAxBA;AADH;AAAA;AAAA;AAAA;AAAA,cAjBF,eA4CE;AAAI,QAAA,EAAE,EAAC,mBAAP;AAA2B,QAAA,SAAS,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgDD;;AAlD8B;;AAqDjC,eAAeX,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass TodoList extends Component {\n  render() {\n    return (\n      <div id=\"content\">\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            this.props.createTask(this.task.value);\n          }}\n        >\n          <input\n            id=\"newTask\"\n            ref={(input) => (this.task = input)}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Add task...\"\n            required\n          />\n          <input type=\"submit\" hidden={true} />\n        </form>\n        <ul id=\"taskList\" className=\"list-unstyled\">\n          {this.props.tasks.map((task, key) => {\n            return (\n              <div className=\"taskTemplate\" className=\"checkbox\" key={key}>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    name={task.id}\n                    defaultChecked={task.completed}\n                    onChange={() =>\n                      this.props.toggleCompleted(this.checkbox.name)\n                    }\n                    ref={(input) => {\n                      this.checkbox = input;\n                    }}\n                  />\n                  <span\n                    className=\"content\"\n                    onClick={() => this.props.deleteTask(task.id)}\n                  >\n                    {task.content}\n                  </span>\n                </label>\n              </div>\n            );\n          })}\n        </ul>\n        <ul id=\"completedTaskList\" className=\"list-unstyled\"></ul>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}